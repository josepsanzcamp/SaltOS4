var proxy=async e=>{var s,o=e.url,t=e.method,a={},n=(e.headers.forEach((e,s)=>{a[s]=e}),a=JSON.stringify(a),await e.clone().text()),t=new Request([o,t,a,n].join("|"));try{s=await fetch(e)}catch(e){console.log(e)}return s?(console.log("using network response for "+o),(await caches.open("saltos")).put(t,s.clone())):(s=await caches.match(t))?console.log("using cache response for "+o):(s=new Response(JSON.stringify({error:{text:"You are offline and the requested content is not cached",code:"offline"}}),{status:200,headers:{"Content-Type":"application/json"}}),console.log("using error response for "+o)),s};self.addEventListener("install",e=>{console.log("install"),self.skipWaiting()}),self.addEventListener("activate",e=>{console.log("activate")}),self.addEventListener("fetch",e=>{console.log("fetch "+e.request.url),e.respondWith(proxy(e.request))}),self.addEventListener("message",async e=>{console.log("message "+e.data),"reset"==e.data&&((await caches.keys()).forEach(e=>{caches.delete(e)}),self.registration.unregister(),e.source.postMessage("ok")),"hello"==e.data&&e.source.postMessage("hello")});
//# sourceMappingURL=proxy.js.map